 <ref *2> IncomingMessage {
1|server  |   _readableState: ReadableState {
1|server  |     objectMode: false,
1|server  |     highWaterMark: 16384,
1|server  |     buffer: BufferList { head: null, tail: null, length: 0 },
1|server  |     length: 0,
1|server  |     pipes: [],
1|server  |     flowing: true,
1|server  |     ended: true,
1|server  |     endEmitted: true,
1|server  |     reading: false,
1|server  |     sync: false,
1|server  |     needReadable: false,
1|server  |     emittedReadable: false,
1|server  |     readableListening: false,
1|server  |     resumeScheduled: false,
1|server  |     errorEmitted: false,
1|server  |     emitClose: true,
1|server  |     autoDestroy: false,
1|server  |     destroyed: false,
1|server  |     errored: null,
1|server  |     closed: false,
1|server  |     closeEmitted: false,
1|server  |     defaultEncoding: 'utf8',
1|server  |     awaitDrainWriters: null,
1|server  |     multiAwaitDrain: false,
1|server  |     readingMore: false,
1|server  |     decoder: null,
1|server  |     encoding: null,
1|server  |     [Symbol(kPaused)]: false
1|server  |   },
1|server  |   _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
1|server  |   _eventsCount: 1,
1|server  |   _maxListeners: undefined,
1|server  |   socket: <ref *1> Socket {
1|server  |     connecting: false,
1|server  |     _hadError: false,
1|server  |     _parent: null,
1|server  |     _host: null,
1|server  |     _readableState: ReadableState {
1|server  |       objectMode: false,
1|server  |       highWaterMark: 16384,
1|server  |       buffer: BufferList { head: null, tail: null, length: 0 },
1|server  |       length: 0,
1|server  |       pipes: [],
1|server  |       flowing: true,
1|server  |       ended: false,
1|server  |       endEmitted: false,
1|server  |       reading: true,
1|server  |       sync: false,
1|server  |       needReadable: true,
1|server  |       emittedReadable: false,
1|server  |       readableListening: false,
1|server  |       resumeScheduled: false,
1|server  |       errorEmitted: false,
1|server  |       emitClose: false,
1|server  |       autoDestroy: false,
1|server  |       destroyed: false,
1|server  |       errored: null,
1|server  |       closed: false,
1|server  |       closeEmitted: false,
1|server  |       defaultEncoding: 'utf8',
1|server  |       awaitDrainWriters: null,
1|server  |       multiAwaitDrain: false,
1|server  |       readingMore: false,
1|server  |       decoder: null,
1|server  |       encoding: null,
1|server  |       [Symbol(kPaused)]: false
1|server  |     },
1|server  |     _events: [Object: null prototype] {
1|server  |       end: [Array],
1|server  |       timeout: [Function: socketOnTimeout],
1|server  |       data: [Function: bound socketOnData],
1|server  |       error: [Function: socketOnError],
1|server  |       close: [Array],
1|server  |       drain: [Function: bound socketOnDrain],
1|server  |       resume: [Function: onSocketResume],
1|server  |       pause: [Function: onSocketPause]
1|server  |     },
1|server  |     _eventsCount: 8,
1|server  |     _maxListeners: undefined,
1|server  |     _writableState: WritableState {
1|server  |       objectMode: false,
1|server  |       highWaterMark: 16384,
1|server  |       finalCalled: false,
1|server  |       needDrain: false,
1|server  |       ending: false,
1|server  |       ended: false,
1|server  |       finished: false,
1|server  |       destroyed: false,
1|server  |       decodeStrings: false,
1|server  |       defaultEncoding: 'utf8',
1|server  |       length: 0,
1|server  |       writing: false,
1|server  |       corked: 0,
1|server  |       sync: true,
1|server  |       bufferProcessing: false,
1|server  |       onwrite: [Function: bound onwrite],
1|server  |       writecb: null,
1|server  |       writelen: 0,
1|server  |       afterWriteTickInfo: null,
1|server  |       buffered: [],
1|server  |       bufferedIndex: 0,
1|server  |       allBuffers: true,
1|server  |       allNoop: true,
1|server  |       pendingcb: 0,
1|server  |       prefinished: false,
1|server  |       errorEmitted: false,
1|server  |       emitClose: false,
1|server  |       autoDestroy: false,
1|server  |       errored: null,
1|server  |       closed: false,
1|server  |       closeEmitted: false
1|server  |     },
1|server  |     allowHalfOpen: true,
1|server  |     _sockname: null,
1|server  |     _pendingData: null,
1|server  |     _pendingEncoding: '',
1|server  |     server: Server {
1|server  |       maxHeaderSize: undefined,
1|server  |       insecureHTTPParser: undefined,
1|server  |       _events: [Object: null prototype],
1|server  |       _eventsCount: 2,
1|server  |       _maxListeners: undefined,
1|server  |       _connections: 1,
1|server  |       _handle: [TCP],
1|server  |       _usingWorkers: false,
1|server  |       _workers: [],
1|server  |       _unref: false,
1|server  |       allowHalfOpen: true,
1|server  |       pauseOnConnect: false,
1|server  |       httpAllowHalfOpen: false,
1|server  |       timeout: 0,
1|server  |       keepAliveTimeout: 5000,
1|server  |       maxHeadersCount: null,
1|server  |       headersTimeout: 60000,
1|server  |       requestTimeout: 0,
1|server  |       _connectionKey: '6::::8000',
1|server  |       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
1|server  |       [Symbol(ServerResponse)]: [Function: ServerResponse],
1|server  |       [Symbol(kCapture)]: false,
1|server  |       [Symbol(async_id_symbol)]: 23
1|server  |     },
1|server  |     _server: Server {
1|server  |       maxHeaderSize: undefined,
1|server  |       insecureHTTPParser: undefined,
1|server  |       _events: [Object: null prototype],
1|server  |       _eventsCount: 2,
1|server  |       _maxListeners: undefined,
1|server  |       _connections: 1,
1|server  |       _handle: [TCP],
1|server  |       _usingWorkers: false,
1|server  |       _workers: [],
1|server  |       _unref: false,
1|server  |       allowHalfOpen: true,
1|server  |       pauseOnConnect: false,
1|server  |       httpAllowHalfOpen: false,
1|server  |       timeout: 0,
1|server  |       keepAliveTimeout: 5000,
1|server  |       maxHeadersCount: null,
1|server  |       headersTimeout: 60000,
1|server  |       requestTimeout: 0,
1|server  |       _connectionKey: '6::::8000',
1|server  |       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
1|server  |       [Symbol(ServerResponse)]: [Function: ServerResponse],
1|server  |       [Symbol(kCapture)]: false,
1|server  |       [Symbol(async_id_symbol)]: 23
1|server  |     },
1|server  |     parser: HTTPParser {
1|server  |       '0': [Function: bound setRequestTimeout],
1|server  |       '1': [Function: parserOnHeaders],
1|server  |       '2': [Function: parserOnHeadersComplete],
1|server  |       '3': [Function: parserOnBody],
1|server  |       '4': [Function: parserOnMessageComplete],
1|server  |       '5': [Function: bound onParserExecute],
1|server  |       '6': [Function: bound onParserTimeout],
1|server  |       _headers: [],
1|server  |       _url: '',
1|server  |       socket: [Circular *1],
1|server  |       incoming: [Circular *2],
1|server  |       outgoing: null,
1|server  |       maxHeaderPairs: 2000,
1|server  |       _consumed: true,
1|server  |       onIncoming: [Function: bound parserOnIncoming],
1|server  |       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
1|server  |     },
1|server  |     on: [Function: socketListenerWrap],
1|server  |     addListener: [Function: socketListenerWrap],
1|server  |     prependListener: [Function: socketListenerWrap],
1|server  |     _paused: false,
1|server  |     _httpMessage: ServerResponse {
1|server  |       _events: [Object: null prototype],
1|server  |       _eventsCount: 1,
1|server  |       _maxListeners: undefined,
1|server  |       outputData: [],
1|server  |       outputSize: 0,
1|server  |       writable: true,
1|server  |       destroyed: false,
1|server  |       _last: false,
1|server  |       chunkedEncoding: false,
1|server  |       shouldKeepAlive: true,
1|server  |       _defaultKeepAlive: true,
1|server  |       useChunkedEncodingByDefault: true,
1|server  |       sendDate: true,
1|server  |       _removedConnection: false,
1|server  |       _removedContLen: false,
1|server  |       _removedTE: false,
1|server  |       _contentLength: null,
1|server  |       _hasBody: true,
1|server  |       _trailer: '',
1|server  |       finished: false,
1|server  |       _headerSent: false,
1|server  |       socket: [Circular *1],
1|server  |       _header: null,
1|server  |       _keepAliveTimeout: 5000,
1|server  |       _onPendingData: [Function: bound updateOutgoingData],
1|server  |       _sent100: false,
1|server  |       _expect_continue: false,
1|server  |       req: [Circular *2],
1|server  |       locals: [Object: null prototype] {},
1|server  |       [Symbol(kCapture)]: false,
1|server  |       [Symbol(kNeedDrain)]: false,
1|server  |       [Symbol(corked)]: 0,
1|server  |       [Symbol(kOutHeaders)]: [Object: null prototype]
1|server  |     },
1|server  |     [Symbol(async_id_symbol)]: 55,
1|server  |     [Symbol(kHandle)]: TCP {
1|server  |       reading: true,
1|server  |       onconnection: null,
1|server  |       _consumed: true,
1|server  |       [Symbol(owner_symbol)]: [Circular *1]
1|server  |     },
1|server  |     [Symbol(kSetNoDelay)]: false,
1|server  |     [Symbol(lastWriteQueueSize)]: 0,
1|server  |     [Symbol(timeout)]: null,
1|server  |     [Symbol(kBuffer)]: null,
1|server  |     [Symbol(kBufferCb)]: null,
1|server  |     [Symbol(kBufferGen)]: null,
1|server  |     [Symbol(kCapture)]: false,
1|server  |     [Symbol(kBytesRead)]: 0,
1|server  |     [Symbol(kBytesWritten)]: 0,
1|server  |     [Symbol(RequestTimeout)]: undefined
1|server  |   },
1|server  |   httpVersionMajor: 1,
1|server  |   httpVersionMinor: 1,
1|server  |   httpVersion: '1.1',
1|server  |   complete: true,
1|server  |   headers: {
1|server  |     host: '89.47.165.123',
1|server  |     accesskey: 'habvuhybduifhbhjBinng',
1|server  |     'user-agent': 'PurpleAir/6.01',
1|server  |     'transfer-encoding': 'chunked',
1|server  |     'content-type': 'application/json'
1|server  |   },
1|server  |   rawHeaders: [
1|server  |     'Host',
1|server  |     '89.47.165.123',
1|server  |     'accessKey',
1|server  |     'habvuhybduifhbhjBinng',
1|server  |     'User-Agent',
1|server  |     'PurpleAir/6.01',
1|server  |     'Transfer-Encoding',
1|server  |     'chunked',
1|server  |     'Content-Type',
1|server  |     'application/json'
1|server  |   ],
1|server  |   trailers: {},
1|server  |   rawTrailers: [],
1|server  |   aborted: false,
1|server  |   upgrade: false,
1|server  |   url: '/sensordata',
1|server  |   method: 'POST',
1|server  |   statusCode: null,
1|server  |   statusMessage: null,
1|server  |   client: <ref *1> Socket {
1|server  |     connecting: false,
1|server  |     _hadError: false,
1|server  |     _parent: null,
1|server  |     _host: null,
1|server  |     _readableState: ReadableState {
1|server  |       objectMode: false,
1|server  |       highWaterMark: 16384,
1|server  |       buffer: BufferList { head: null, tail: null, length: 0 },
1|server  |       length: 0,
1|server  |       pipes: [],
1|server  |       flowing: true,
1|server  |       ended: false,
1|server  |       endEmitted: false,
1|server  |       reading: true,
1|server  |       sync: false,
1|server  |       needReadable: true,
1|server  |       emittedReadable: false,
1|server  |       readableListening: false,
1|server  |       resumeScheduled: false,
1|server  |       errorEmitted: false,
1|server  |       emitClose: false,
1|server  |       autoDestroy: false,
1|server  |       destroyed: false,
1|server  |       errored: null,
1|server  |       closed: false,
1|server  |       closeEmitted: false,
1|server  |       defaultEncoding: 'utf8',
1|server  |       awaitDrainWriters: null,
1|server  |       multiAwaitDrain: false,
1|server  |       readingMore: false,
1|server  |       decoder: null,
1|server  |       encoding: null,
1|server  |       [Symbol(kPaused)]: false
1|server  |     },
1|server  |     _events: [Object: null prototype] {
1|server  |       end: [Array],
1|server  |       timeout: [Function: socketOnTimeout],
1|server  |       data: [Function: bound socketOnData],
1|server  |       error: [Function: socketOnError],
1|server  |       close: [Array],
1|server  |       drain: [Function: bound socketOnDrain],
1|server  |       resume: [Function: onSocketResume],
1|server  |       pause: [Function: onSocketPause]
1|server  |     },
1|server  |     _eventsCount: 8,
1|server  |     _maxListeners: undefined,
1|server  |     _writableState: WritableState {
1|server  |       objectMode: false,
1|server  |       highWaterMark: 16384,
1|server  |       finalCalled: false,
1|server  |       needDrain: false,
1|server  |       ending: false,
1|server  |       ended: false,
1|server  |       finished: false,
1|server  |       destroyed: false,
1|server  |       decodeStrings: false,
1|server  |       defaultEncoding: 'utf8',
1|server  |       length: 0,
1|server  |       writing: false,
1|server  |       corked: 0,
1|server  |       sync: true,
1|server  |       bufferProcessing: false,
1|server  |       onwrite: [Function: bound onwrite],
1|server  |       writecb: null,
1|server  |       writelen: 0,
1|server  |       afterWriteTickInfo: null,
1|server  |       buffered: [],
1|server  |       bufferedIndex: 0,
1|server  |       allBuffers: true,
1|server  |       allNoop: true,
1|server  |       pendingcb: 0,
1|server  |       prefinished: false,
1|server  |       errorEmitted: false,
1|server  |       emitClose: false,
1|server  |       autoDestroy: false,
1|server  |       errored: null,
1|server  |       closed: false,
1|server  |       closeEmitted: false
1|server  |     },
1|server  |     allowHalfOpen: true,
1|server  |     _sockname: null,
1|server  |     _pendingData: null,
1|server  |     _pendingEncoding: '',
1|server  |     server: Server {
1|server  |       maxHeaderSize: undefined,
1|server  |       insecureHTTPParser: undefined,
1|server  |       _events: [Object: null prototype],
1|server  |       _eventsCount: 2,
1|server  |       _maxListeners: undefined,
1|server  |       _connections: 1,
1|server  |       _handle: [TCP],
1|server  |       _usingWorkers: false,
1|server  |       _workers: [],
1|server  |       _unref: false,
1|server  |       allowHalfOpen: true,
1|server  |       pauseOnConnect: false,
1|server  |       httpAllowHalfOpen: false,
1|server  |       timeout: 0,
1|server  |       keepAliveTimeout: 5000,
1|server  |       maxHeadersCount: null,
1|server  |       headersTimeout: 60000,
1|server  |       requestTimeout: 0,
1|server  |       _connectionKey: '6::::8000',
1|server  |       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
1|server  |       [Symbol(ServerResponse)]: [Function: ServerResponse],
1|server  |       [Symbol(kCapture)]: false,
1|server  |       [Symbol(async_id_symbol)]: 23
1|server  |     },
1|server  |     _server: Server {
1|server  |       maxHeaderSize: undefined,
1|server  |       insecureHTTPParser: undefined,
1|server  |       _events: [Object: null prototype],
1|server  |       _eventsCount: 2,
1|server  |       _maxListeners: undefined,
1|server  |       _connections: 1,
1|server  |       _handle: [TCP],
1|server  |       _usingWorkers: false,
1|server  |       _workers: [],
1|server  |       _unref: false,
1|server  |       allowHalfOpen: true,
1|server  |       pauseOnConnect: false,
1|server  |       httpAllowHalfOpen: false,
1|server  |       timeout: 0,
1|server  |       keepAliveTimeout: 5000,
1|server  |       maxHeadersCount: null,
1|server  |       headersTimeout: 60000,
1|server  |       requestTimeout: 0,
1|server  |       _connectionKey: '6::::8000',
1|server  |       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
1|server  |       [Symbol(ServerResponse)]: [Function: ServerResponse],
1|server  |       [Symbol(kCapture)]: false,
1|server  |       [Symbol(async_id_symbol)]: 23
1|server  |     },
1|server  |     parser: HTTPParser {
1|server  |       '0': [Function: bound setRequestTimeout],
1|server  |       '1': [Function: parserOnHeaders],
1|server  |       '2': [Function: parserOnHeadersComplete],
1|server  |       '3': [Function: parserOnBody],
1|server  |       '4': [Function: parserOnMessageComplete],
1|server  |       '5': [Function: bound onParserExecute],
1|server  |       '6': [Function: bound onParserTimeout],
1|server  |       _headers: [],
1|server  |       _url: '',
1|server  |       socket: [Circular *1],
1|server  |       incoming: [Circular *2],
1|server  |       outgoing: null,
1|server  |       maxHeaderPairs: 2000,
1|server  |       _consumed: true,
1|server  |       onIncoming: [Function: bound parserOnIncoming],
1|server  |       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
1|server  |     },
1|server  |     on: [Function: socketListenerWrap],
1|server  |     addListener: [Function: socketListenerWrap],
1|server  |     prependListener: [Function: socketListenerWrap],
1|server  |     _paused: false,
1|server  |     _httpMessage: ServerResponse {
1|server  |       _events: [Object: null prototype],
1|server  |       _eventsCount: 1,
1|server  |       _maxListeners: undefined,
1|server  |       outputData: [],
1|server  |       outputSize: 0,
1|server  |       writable: true,
1|server  |       destroyed: false,
1|server  |       _last: false,
1|server  |       chunkedEncoding: false,
1|server  |       shouldKeepAlive: true,
1|server  |       _defaultKeepAlive: true,
1|server  |       useChunkedEncodingByDefault: true,
1|server  |       sendDate: true,
1|server  |       _removedConnection: false,
1|server  |       _removedContLen: false,
1|server  |       _removedTE: false,
1|server  |       _contentLength: null,
1|server  |       _hasBody: true,
1|server  |       _trailer: '',
1|server  |       finished: false,
1|server  |       _headerSent: false,
1|server  |       socket: [Circular *1],
1|server  |       _header: null,
1|server  |       _keepAliveTimeout: 5000,
1|server  |       _onPendingData: [Function: bound updateOutgoingData],
1|server  |       _sent100: false,
1|server  |       _expect_continue: false,
1|server  |       req: [Circular *2],
1|server  |       locals: [Object: null prototype] {},
1|server  |       [Symbol(kCapture)]: false,
1|server  |       [Symbol(kNeedDrain)]: false,
1|server  |       [Symbol(corked)]: 0,
1|server  |       [Symbol(kOutHeaders)]: [Object: null prototype]
1|server  |     },
1|server  |     [Symbol(async_id_symbol)]: 55,
1|server  |     [Symbol(kHandle)]: TCP {
1|server  |       reading: true,
1|server  |       onconnection: null,
1|server  |       _consumed: true,
1|server  |       [Symbol(owner_symbol)]: [Circular *1]
1|server  |     },
1|server  |     [Symbol(kSetNoDelay)]: false,
1|server  |     [Symbol(lastWriteQueueSize)]: 0,
1|server  |     [Symbol(timeout)]: null,
1|server  |     [Symbol(kBuffer)]: null,
1|server  |     [Symbol(kBufferCb)]: null,
1|server  |     [Symbol(kBufferGen)]: null,
1|server  |     [Symbol(kCapture)]: false,
1|server  |     [Symbol(kBytesRead)]: 0,
1|server  |     [Symbol(kBytesWritten)]: 0,
1|server  |     [Symbol(RequestTimeout)]: undefined
1|server  |   },
1|server  |   _consuming: true,
1|server  |   _dumped: false,
1|server  |   next: [Function: next],
1|server  |   baseUrl: '',
1|server  |   originalUrl: '/sensordata',
1|server  |   _parsedUrl: Url {
1|server  |     protocol: null,
1|server  |     slashes: null,
1|server  |     auth: null,
1|server  |     host: null,
1|server  |     port: null,
1|server  |     hostname: null,
1|server  |     hash: null,
1|server  |     search: null,
1|server  |     query: null,
1|server  |     pathname: '/sensordata',
1|server  |     path: '/sensordata',
1|server  |     href: '/sensordata',
1|server  |     _raw: '/sensordata'
1|server  |   },
1|server  |   params: {},
1|server  |   query: {},
1|server  |   res: <ref *3> ServerResponse {
1|server  |     _events: [Object: null prototype] { finish: [Array] },
1|server  |     _eventsCount: 1,
1|server  |     _maxListeners: undefined,
1|server  |     outputData: [],
1|server  |     outputSize: 0,
1|server  |     writable: true,
1|server  |     destroyed: false,
1|server  |     _last: false,
1|server  |     chunkedEncoding: false,
1|server  |     shouldKeepAlive: true,
1|server  |     _defaultKeepAlive: true,
1|server  |     useChunkedEncodingByDefault: true,
1|server  |     sendDate: true,
1|server  |     _removedConnection: false,
1|server  |     _removedContLen: false,
1|server  |     _removedTE: false,
1|server  |     _contentLength: null,
1|server  |     _hasBody: true,
1|server  |     _trailer: '',
1|server  |     finished: false,
1|server  |     _headerSent: false,
1|server  |     socket: <ref *1> Socket {
1|server  |       connecting: false,
1|server  |       _hadError: false,
1|server  |       _parent: null,
1|server  |       _host: null,
1|server  |       _readableState: [ReadableState],
1|server  |       _events: [Object: null prototype],
1|server  |       _eventsCount: 8,
1|server  |       _maxListeners: undefined,
1|server  |       _writableState: [WritableState],
1|server  |       allowHalfOpen: true,
1|server  |       _sockname: null,
1|server  |       _pendingData: null,
1|server  |       _pendingEncoding: '',
1|server  |       server: [Server],
1|server  |       _server: [Server],
1|server  |       parser: [HTTPParser],
1|server  |       on: [Function: socketListenerWrap],
1|server  |       addListener: [Function: socketListenerWrap],
1|server  |       prependListener: [Function: socketListenerWrap],
1|server  |       _paused: false,
1|server  |       _httpMessage: [Circular *3],
1|server  |       [Symbol(async_id_symbol)]: 55,
1|server  |       [Symbol(kHandle)]: [TCP],
1|server  |       [Symbol(kSetNoDelay)]: false,
1|server  |       [Symbol(lastWriteQueueSize)]: 0,
1|server  |       [Symbol(timeout)]: null,
1|server  |       [Symbol(kBuffer)]: null,
1|server  |       [Symbol(kBufferCb)]: null,
1|server  |       [Symbol(kBufferGen)]: null,
1|server  |       [Symbol(kCapture)]: false,
1|server  |       [Symbol(kBytesRead)]: 0,
1|server  |       [Symbol(kBytesWritten)]: 0,
1|server  |       [Symbol(RequestTimeout)]: undefined
1|server  |     },
1|server  |     _header: null,
1|server  |     _keepAliveTimeout: 5000,
1|server  |     _onPendingData: [Function: bound updateOutgoingData],
1|server  |     _sent100: false,
1|server  |     _expect_continue: false,
1|server  |     req: [Circular *2],
1|server  |     locals: [Object: null prototype] {},
1|server  |     [Symbol(kCapture)]: false,
1|server  |     [Symbol(kNeedDrain)]: false,
1|server  |     [Symbol(corked)]: 0,
1|server  |     [Symbol(kOutHeaders)]: [Object: null prototype] {
1|server  |       'x-powered-by': [Array],
1|server  |       'access-control-allow-origin': [Array]
1|server  |     }
1|server  |   },
1|server  |   body: {
1|server  |     SensorId: '48:3f:da:a7:24:57',
1|server  |     DateTime: '2022/05/02T06:42:37z',
1|server  |     Geo: 'PurpleAir-2457',
1|server  |     Mem: 17464,
1|server  |     memfrag: 25,
1|server  |     memfb: 13088,
1|server  |     memcs: 1220,
1|server  |     Id: 3,
1|server  |     lat: 18.645599,
1|server  |     lon: 73.799202,
1|server  |     Adc: 'nan',
1|server  |     loggingrate: 15,
1|server  |     place: 'inside',
1|server  |     version: '6.01',
1|server  |     uptime: 136,
1|server  |     rssi: -59,
1|server  |     period: 118,
1|server  |     httpsuccess: 6,
1|server  |     httpsends: 6,
1|server  |     hardwareversion: '2.0',
1|server  |     hardwarediscovered: '2.0+BME280+PMSX003-B+PMSX003-A',
1|server  |     current_temp_f: 91,
1|server  |     current_humidity: 28,
1|server  |     current_dewpoint_f: 54,
1|server  |     pressure: 942.51,
1|server  |     p25aqic_b: 'rgb(255,242,0)',
1|server  |     'pm2.5_aqi_b': 73,
1|server  |     pm1_0_cf_1_b: 10.71,
1|server  |     p_0_3_um_b: 749.31,
1|server  |     pm2_5_cf_1_b: 22.43,
1|server  |     p_0_5_um_b: 692.63,
1|server  |     pm10_0_cf_1_b: 23.4,
1|server  |     p_1_0_um_b: 150.91,
1|server  |     pm1_0_atm_b: 10.71,
1|server  |     p_2_5_um_b: 0,
1|server  |     pm2_5_atm_b: 22.43,
1|server  |     p_5_0_um_b: 0,
1|server  |     pm10_0_atm_b: 23.4,
1|server  |     p_10_0_um_b: 0,
1|server  |     p25aqic: 'rgb(255,247,0)',
1|server  |     'pm2.5_aqi': 70,
1|server  |     pm1_0_cf_1: 8.62,
1|server  |     p_0_3_um: 744.43,
1|server  |     pm2_5_cf_1: 21.08,
1|server  |     p_0_5_um: 703.65,
1|server  |     pm10_0_cf_1: 23.65,
1|server  |     p_1_0_um: 157.03,
1|server  |     pm1_0_atm: 8.62,
1|server  |     p_2_5_um: 0,
1|server  |     pm2_5_atm: 21.08,
1|server  |     p_5_0_um: 0,
1|server  |     pm10_0_atm: 23.65,
1|server  |     p_10_0_um: 0,
1|server  |     pa_latency: 7084,
1|server  |     key1_response: 200,
1|server  |     key1_response_date: 1651473751,
1|server  |     key1_count: 850,
1|server  |     ts_latency: 1110,
1|server  |     key2_response: 200,
1|server  |     key2_response_date: 1651473753,
1|server  |     key2_count: 849,
1|server  |     ts_s_latency: 1046,
1|server  |     key1_response_b: 200,
1|server  |     key1_response_date_b: 1651473755,
1|server  |     key1_count_b: 849,
1|server  |     ts_latency_b: 1100,
1|server  |     key2_response_b: 200,
1|server  |     key2_response_date_b: 1651473757,
1|server  |     key2_count_b: 849,
1|server  |     ts_s_latency_b: 1187,
1|server  |     wlstate: 'Connected',
1|server  |     status_0: 2,
1|server  |     status_1: 2,
1|server  |     status_2: 2,
1|server  |     status_3: 2,
1|server  |     status_4: 2,
1|server  |     status_5: 2,
1|server  |     status_6: 1,
1|server  |     status_7: 0,
1|server  |     status_8: 2,
1|server  |     status_9: 2
1|server  |   },
1|server  |   _body: true,
1|server  |   length: undefined,
1|server  |   route: Route {
1|server  |     path: '/sensordata',
1|server  |     stack: [ [Layer] ],
1|server  |     methods: { post: true }
1|server  |   },
1|server  |   [Symbol(kCapture)]: false,
1|server  |   [Symbol(RequestTimeout)]: undefined
1|server  | }
1|server  | habvuhybduifhbhjBinng
